[build-system]
requires = [
    "Cython",
    # Starting with NumPy 1.25, NumPy is (by default) as far back compatible
    # as oldest-support-numpy was (customizable with a NPY_TARGET_VERSION
    # define).  For older Python versions (where NumPy 1.25 is not yet available)
    # continue using oldest-support-numpy.
    "oldest-supported-numpy; python_version<'3.9'",
    "numpy>=1.25; python_version>='3.9'",
    "setuptools>=61.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "shapely"
dynamic = ["version"]
authors = [
    {name = "Sean Gillies"},
]
maintainers = [
    {name = "Shapely contributors"},
]
description = "Manipulation and analysis of geometric objects"
readme = "README.rst"
keywords = ["geometry", "topology", "gis"]
license = {text = "BSD 3-Clause"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.16",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
]
docs = [
    "numpydoc==1.1.*",
    "matplotlib",
    "sphinx",
    "sphinx-book-theme",
    "sphinx-remove-toctrees",
]

[project.urls]
Documentation = "https://shapely.readthedocs.io/"
Repository = "https://github.com/shapely/shapely"

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
include = ["shapely", "shapely.*"]

[tool.setuptools.package-data]
"shapely" = ["*.pxd"]

[tool.coverage.run]
source = ["shapely"]
omit = ["shapely/tests/*"]

[tool.ruff]
line-length = 88
extend-exclude = ["docs/*", "benchmarks/*", "shapely/_version.py"]

[tool.ruff.lint]
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-debugger
    "T10",
    # flake8-simplify
    # "SIM",
    # pylint
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    # misc lints
    "PIE",
    # implicit string concatenation
    "ISC",
    # type-checking imports
    "TCH",
    # comprehensions
    "C4",
    # Ruff-specific rules
    "RUF",
    # isort
    "I",
    # pydocstyle
    #"D",
]

ignore = [
    ### Intentionally disabled
    # module level import not at top of file
    "E402",
    # do not assign a lambda expression, use a def
    "E731",
    # mutable-argument-default
    "B006",
    # unused-loop-control-variable
    "B007",
    # get-attr-with-constant
    "B009",
    # Only works with python >=3.10
    "B905",
    # dict literals
    "C408",
    # Too many arguments to function call
    "PLR0913",
    # Too many returns
    "PLR0911",
    # Too many branches
    "PLR0912",
    # Too many statements
    "PLR0915",
    # Magic number
    "PLR2004",
    # Redefined loop name
    "PLW2901",
    # Global statements are discouraged
    "PLW0603",
    # compare-to-empty-string
    "PLC1901",

    ### Additional checks that don't pass yet
    # Useless statement
    "B018",
    # Within an except clause, raise exceptions with ...
    "B904",
    # Consider `elif` instead of `else` then `if` to remove indentation level
    "PLR5501",
    # collection-literal-concatenation
    "RUF005",
    # Mutable class attributes should be annotated with `typing.ClassVar`,
    "RUF012"
]

[tool.ruff.lint.per-file-ignores]
# ignore pydocstyle errors in tests
"**/tests/*" = ["D"]
# the order of imports in __init__ is a bit tricky, so keep manual
"shapely/__init__.py" = ["F401", "F403", "I"]

[tool.ruff.lint.isort]
combine-as-imports = true
extra-standard-library = ["packaging"]
